apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  name: raycluster-smbpy
spec:
  rayVersion: "3.0.0dev0"
  enableInTreeAutoscaling: true
  headGroupSpec:
    serviceType: LoadBalancer # Options are ClusterIP, NodePort, and LoadBalancer
    enableIngress: true
    rayStartParams:
      block: "true"
      dashboard-host: "0.0.0.0"
    template: # Pod template
        metadata: # Pod metadata
        spec: # Pod spec
            containers:
            - name: ray-head
              image: minerharry/ai_game_router:smbpy_ai-v0.1
              resources:
                limits:
                  cpu: 2
                  memory: 1Gi
                requests:
                  cpu: 1
                  memory: 1Gi
              #tell pygame the machine is headless
              env:
              - name: SDL_VIDEODRIVER
                value: "dummy"
              lifecycle:
                postStart:
                  exec:
                    command: ["/bin/sh","-c","cd /router/AI_game_router; git pull",]
                # Keep this preStop hook in each Ray container config.
                preStop:
                  exec:
                    command: ["/bin/sh","-c","ray stop"]
              ports: # Optional service port overrides
              - containerPort: 6379
                name: gcs
              - containerPort: 8265
                name: dashboard
              - containerPort: 10001
                name: client
              - containerPort: 8000
                name: serve
  workerGroupSpecs:
  - groupName: primary
    rayStartParams:
      block: "true"
    replicas: 3
    minReplicas: 3
    maxReplicas: 5
    template: # Pod template
      spec:
        # Keep this initContainer in each workerGroup template.
        initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
        containers:
        - name: external
          image: minerharry/ai_game_router:smbpy_ai-v0.1
          #tell pygame the machine is headless
          env:
          - name: SDL_VIDEODRIVER
            value: "dummy"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","cd /router/AI_game_router; git pull",]
            preStop:
              exec:
                command: ["/bin/sh","-c","ray stop"]
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "500m"
              memory: "256Mi"
  workerGroupSpecs:
  - groupName: special
    rayStartParams:
      block: "true"
      resources: "{\"Special\":2}"
    replicas: 1
    minReplicas: 1
    maxReplicas: 5
    template: # Pod template
      spec:
        # Keep this initContainer in each workerGroup template.
        initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
        containers:
        - name: external
          image: minerharry/ai_game_router:smbpy_ai-v0.1
          #tell pygame the machine is headless
          env:
          - name: SDL_VIDEODRIVER
            value: "dummy"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","cd /router/AI_game_router; git pull",]
            preStop:
              exec:
                command: ["/bin/sh","-c","ray stop"]
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "500m"
              memory: "256Mi"